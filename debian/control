Source: rustc
Section: devel
Priority: optional
Maintainer: Wong Hoi Sing Edison <hswong3i@gmail.com>
Standards-Version: 4.5.0
Homepage: http://www.rust-lang.org
Vcs-Git: https://github.com/rust-lang/rust.git
Vcs-Browser: https://github.com/rust-lang/rust
Build-Depends:
 debhelper,
 debhelper-compat (= 10),
 ca-certificates,
 chrpath,
 curl,

Package: rustc
Architecture: amd64
Description: Rust systems programming language
 Rust is a curly-brace, block-structured expression language.  It
 visually resembles the C language family, but differs significantly
 in syntactic and semantic details.  Its design is oriented toward
 concerns of "programming in the large", that is, of creating and
 maintaining boundaries - both abstract and operational - that
 preserve large-system integrity, availability and concurrency.
 .
 It supports a mixture of imperative procedural, concurrent actor,
 object-oriented and pure functional styles.  Rust also supports
 generic programming and meta-programming, in both static and dynamic
 styles.
Depends:
 ${shlibs:Depends},
 ${misc:Depends},
 binutils,
 gcc,
 libc-dev,
 libstd-rust-dev,

Package: libstd-rust-dev
Section: libdevel
Architecture: any
Multi-Arch: same
Description: Rust standard libraries - development files
 Rust is a curly-brace, block-structured expression language.  It
 visually resembles the C language family, but differs significantly
 in syntactic and semantic details.  Its design is oriented toward
 concerns of "programming in the large", that is, of creating and
 maintaining boundaries - both abstract and operational - that
 preserve large-system integrity, availability and concurrency.
 .
 It supports a mixture of imperative procedural, concurrent actor,
 object-oriented and pure functional styles.  Rust also supports
 generic programming and meta-programming, in both static and dynamic
 styles.
 .
 This package contains development files for the standard Rust libraries,
 needed to compile Rust programs. It may also be installed on a system
 of another host architecture, for cross-compiling to this architecture.
Depends:
 ${shlibs:Depends},
 ${misc:Depends},

Package: cargo
Architecture: any
Multi-Arch: allowed
Description: Rust package manager
 Cargo is a tool that allows Rust projects to declare their various
 dependencies, and ensure that you'll always get a repeatable build.
 .
 To accomplish this goal, Cargo does four things:
  * Introduces two metadata files with various bits of project information.
  * Fetches and builds your project's dependencies.
  * Invokes rustc or another build tool with the correct parameters to build
    your project.
  * Introduces conventions, making working with Rust projects easier.
 .
 Cargo downloads your Rust projectâ€™s dependencies and compiles your
 project.
Depends:
 ${shlibs:Depends},
 ${misc:Depends},
 binutils,
 gcc | clang | c-compiler,
 rustc (>= 1.24),
